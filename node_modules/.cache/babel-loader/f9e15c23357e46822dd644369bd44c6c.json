{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemon\\\\Desktop\\\\SheCodes\\\\weather-react\\\\weather-app-react\\\\weather-app\\\\weather-react-app\\\\src\\\\WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Weather.css\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function getForecast(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  function load() {\n    let apiKey = `ba322d86c6e375290a924f7f5aba942e`;\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiUrlForecast = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrlForecast).then(getForecast);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row pt-5\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 7 && index > 0) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-2 text-center pb-2\",\n              children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else {\n    load();\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","getForecast","response","data","daily","load","apiKey","lat","lon","apiUrlForecast","get","then","map","dailyForecast","index"],"sources":["C:/Users/lemon/Desktop/SheCodes/weather-react/weather-app-react/weather-app/weather-react-app/src/WeatherForecast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Weather.css\";\r\nimport axios from \"axios\";\r\nimport WeatherForecastDay from \"./WeatherForecastDay\";\r\n\r\nexport default function WeatherForecast(props) {\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [forecast, setForecast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoaded(false);\r\n  }, [props.coordinates]);\r\n\r\n  function getForecast(response) {\r\n    setForecast(response.data.daily);\r\n    setLoaded(true);\r\n  }\r\n\r\n  function load() {\r\n    let apiKey = `ba322d86c6e375290a924f7f5aba942e`;\r\n    let lat = props.coordinates.lat;\r\n    let lon = props.coordinates.lon;\r\n    let apiUrlForecast = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrlForecast).then(getForecast);\r\n  }\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div className=\"WeatherForecast\">\r\n        <div className=\"row pt-5\">\r\n          {forecast.map(function (dailyForecast, index) {\r\n            if (index < 7 && index > 0) {\r\n              return (\r\n                <div className=\"col-md-2 text-center pb-2\" key={index}>\r\n                  <WeatherForecastDay data={dailyForecast} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    load();\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAAA;;EAC7C,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;EACA,IAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACdM,SAAS,CAAC,KAAD,CAAT;EACD,CAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;EAIA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;IAC7BH,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;IACAP,SAAS,CAAC,IAAD,CAAT;EACD;;EAED,SAASQ,IAAT,GAAgB;IACd,IAAIC,MAAM,GAAI,kCAAd;IACA,IAAIC,GAAG,GAAGZ,KAAK,CAACK,WAAN,CAAkBO,GAA5B;IACA,IAAIC,GAAG,GAAGb,KAAK,CAACK,WAAN,CAAkBQ,GAA5B;IACA,IAAIC,cAAc,GAAI,uDAAsDF,GAAI,QAAOC,GAAI,UAASF,MAAO,eAA3G;IACAd,KAAK,CAACkB,GAAN,CAAUD,cAAV,EAA0BE,IAA1B,CAA+BV,WAA/B;EACD;;EAED,IAAIL,MAAJ,EAAY;IACV,oBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,UACGE,QAAQ,CAACc,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;UAC5C,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;YAC1B,oBACE;cAAK,SAAS,EAAC,2BAAf;cAAA,uBACE,QAAC,kBAAD;gBAAoB,IAAI,EAAED;cAA1B;gBAAA;gBAAA;gBAAA;cAAA;YADF,GAAgDC,KAAhD;cAAA;cAAA;cAAA;YAAA,QADF;UAKD,CAND,MAMO;YACL,OAAO,IAAP;UACD;QACF,CAVA;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD,CAlBD,MAkBO;IACLT,IAAI;IACJ,OAAO,IAAP;EACD;AACF;;GA3CuBX,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}