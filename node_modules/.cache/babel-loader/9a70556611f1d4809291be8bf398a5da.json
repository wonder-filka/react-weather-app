{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemon\\\\Desktop\\\\SheCodes\\\\weather-react\\\\weather-app-react\\\\weather-app\\\\weather-react-app\\\\src\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Weather.css\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  function handleResponse(response) {\n    setweatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      humidity: response.data.main.humidity,\n      feelslike: response.data.main.feels_like,\n      description: response.data.weather[0].main,\n      iconUrl: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}.png`,\n      date: new Date(response.data.dt * 1000)\n    });\n  }\n\n  let [weatherData, setweatherData] = useState({\n    ready: false\n  });\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteiner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"input-group\",\n              id: \"search-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                className: \"form-control\",\n                id: \"city-input\",\n                placeholder: \"City name\",\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                id: \"search\",\n                type: \"submit\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                id: \"current\",\n                type: \"button\",\n                children: \"Current\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n              info: weatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    const apiKey = \"ba322d86c6e375290a924f7f5aba942e\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"gk4CTVFbMIKsdptE/YNkwx56F5c=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","WeatherInfo","Weather","props","handleResponse","response","setweatherData","ready","temperature","data","main","temp","wind","speed","city","name","humidity","feelslike","feels_like","description","weather","iconUrl","icon","date","Date","dt","weatherData","apiKey","apiUrl","defaultCity","get","then"],"sources":["C:/Users/lemon/Desktop/SheCodes/weather-react/weather-app-react/weather-app/weather-react-app/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Weather.css\";\r\nimport axios from \"axios\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\nexport default function Weather(props) {\r\n  function handleResponse(response) {\r\n    setweatherData({\r\n      ready: true,\r\n      temperature: response.data.main.temp,\r\n      wind: response.data.wind.speed,\r\n      city: response.data.name,\r\n      humidity: response.data.main.humidity,\r\n      feelslike: response.data.main.feels_like,\r\n      description: response.data.weather[0].main,\r\n      iconUrl: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}.png`,\r\n      date: new Date(response.data.dt * 1000),\r\n    });\r\n  }\r\n\r\n  let [weatherData, setweatherData] = useState({ ready: false });\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"Weather\">\r\n        <div className=\"conteiner\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm\">\r\n              <form className=\"input-group\" id=\"search-form\">\r\n                <input\r\n                  type=\"search\"\r\n                  className=\"form-control\"\r\n                  id=\"city-input\"\r\n                  placeholder=\"City name\"\r\n                  autocomplete=\"off\"\r\n                ></input>\r\n                <button className=\"btn btn-warning\" id=\"search\" type=\"submit\">\r\n                  Search\r\n                </button>\r\n                <button className=\"btn btn-warning\" id=\"current\" type=\"button\">\r\n                  Current\r\n                </button>\r\n              </form>\r\n              <WeatherInfo info={weatherData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const apiKey = \"ba322d86c6e375290a924f7f5aba942e\";\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n\r\n    return \"Loading...\";\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;IAChCC,cAAc,CAAC;MACbC,KAAK,EAAE,IADM;MAEbC,WAAW,EAAEH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,IAFnB;MAGbC,IAAI,EAAEP,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,KAHZ;MAIbC,IAAI,EAAET,QAAQ,CAACI,IAAT,CAAcM,IAJP;MAKbC,QAAQ,EAAEX,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBM,QALhB;MAMbC,SAAS,EAAEZ,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBQ,UANjB;MAObC,WAAW,EAAEd,QAAQ,CAACI,IAAT,CAAcW,OAAd,CAAsB,CAAtB,EAAyBV,IAPzB;MAQbW,OAAO,EAAG,oCAAmChB,QAAQ,CAACI,IAAT,CAAcW,OAAd,CAAsB,CAAtB,EAAyBE,IAAK,MAR9D;MASbC,IAAI,EAAE,IAAIC,IAAJ,CAASnB,QAAQ,CAACI,IAAT,CAAcgB,EAAd,GAAmB,IAA5B;IATO,CAAD,CAAd;EAWD;;EAED,IAAI,CAACC,WAAD,EAAcpB,cAAd,IAAgCP,QAAQ,CAAC;IAAEQ,KAAK,EAAE;EAAT,CAAD,CAA5C;;EAEA,IAAImB,WAAW,CAACnB,KAAhB,EAAuB;IACrB,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE;UAAK,SAAS,EAAC,KAAf;UAAA,uBACE;YAAK,SAAS,EAAC,QAAf;YAAA,wBACE;cAAM,SAAS,EAAC,aAAhB;cAA8B,EAAE,EAAC,aAAjC;cAAA,wBACE;gBACE,IAAI,EAAC,QADP;gBAEE,SAAS,EAAC,cAFZ;gBAGE,EAAE,EAAC,YAHL;gBAIE,WAAW,EAAC,WAJd;gBAKE,YAAY,EAAC;cALf;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAQE;gBAAQ,SAAS,EAAC,iBAAlB;gBAAoC,EAAE,EAAC,QAAvC;gBAAgD,IAAI,EAAC,QAArD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QARF,eAWE;gBAAQ,SAAS,EAAC,iBAAlB;gBAAoC,EAAE,EAAC,SAAvC;gBAAiD,IAAI,EAAC,QAAtD;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAXF;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAgBE,QAAC,WAAD;cAAa,IAAI,EAAEmB;YAAnB;cAAA;cAAA;cAAA;YAAA,QAhBF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EA0BD,CA3BD,MA2BO;IACL,MAAMC,MAAM,GAAG,kCAAf;IACA,IAAIC,MAAM,GAAI,qDAAoDzB,KAAK,CAAC0B,WAAY,UAASF,MAAO,eAApG;IACA3B,KAAK,CAAC8B,GAAN,CAAUF,MAAV,EAAkBG,IAAlB,CAAuB3B,cAAvB;IAEA,OAAO,YAAP;EACD;AACF;;GAnDuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}